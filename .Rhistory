setwd("Z:/Thesis Group_TG/EB/EB2016/For Dylan")
diversity<-read.csv(file="diversity plot.csv", header=TRUE, sep=",")
library(reshape)
diversityM<-melt(diversity,id.vars = c("Count", "PRODUCTNDID", "Category_1"))
diversityM$value<-as.numeric(diversityM$value)
library(ggplot2)
ggplot(diversityM, aes(factor(Category_1), Total.nutrients)) +
geom_boxplot()+
geom_hline(yintercept=15) +
xlab("Product Category") +
ylab("Number of Nutrients")+
theme_bw() +
theme(axis.text=element_text(size=28),
axis.title=element_text(size=28,face="bold"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_y_continuous(name="Number of Nutrients", limits=c(0, 155)) +
guides(fill=FALSE)+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_discrete(labels=c("Baby Foods","Baked Products","Beef Products","Beverages",
"Cereals","Grains","Dairy/Egg",
"Fast Foods","Fats/Oils","Seafood",
"Formulas","Fruits","Legumes",
"Medication","Nuts and Seeds","Poultry",
"Lunch Meats","Snacks","Gravies",
"Soups/Sauces","Spices/Herbs","Sweets", "Vegetables"
))
ggplot(aes(y = value, x = Category_1, fill = variable), data = diversityM) +
geom_boxplot()+
xlab("Product Category") +
ylab("Number of Nutrients")+
theme_bw() +
theme(axis.text=element_text(size=28),
axis.title=element_text(size=28,face="bold"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_y_continuous(name="Number of Nutrients", limits=c(0, 155)) +
guides(fill=FALSE)+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_x_discrete(labels=c("Baby Foods","Baked Products","Beef Products","Beverages",
"Cereals","Grains","Dairy/Egg",
"Fast Foods","Fats/Oils","Seafood",
"Formulas","Fruits","Legumes",
"Nuts and Seeds","Poultry",
"Lunch Meats","Snacks","Soups/Sauces",
"Spices/Herbs","Sweets", "Vegetables"
))
#GET HISTORICAL NUTRITION FACTS DATABASE
setwd("Z:/MySQL Database/Diet/Reference_Tables/1_FoodomicsPreProcessing")
compiledNFD<- read.csv(file = "TRANSLATING_BNFD_TO_R.txt", header = TRUE, sep="\t", na.strings=c("NA","NaN", " ", "N/A", "NULL"),stringsAsFactors=FALSE)
#GET REFERENCE BASE PRODUCT PROFILE DATABASE
setwd("Z:/MySQL Database/Diet/Reference_Tables/1_FoodomicsPreProcessing")
referenceBASEP<-readRDS(file = "reference_BASEP.rds")
###############################################
#####ALTER DATA TYPE AND REMOVE SUPPLEMENTS####
###############################################
#Convert numeric columns to type numeric in compiled historical nutrition facts database
compiledNFD[,c(12:96, 114:241)] <- sapply(compiledNFD[,c(12:96, 114:241)], as.numeric)
#Store supplements separately
supplements<-subset(compiledNFD, compiledNFD$Category_1=="Supplement")
#Remove supplements from the NFD
compiledNFD<-subset(compiledNFD, !compiledNFD$Category_1=="Supplement")
#Calculate a factor that we can use to convert all profiles to per 100 grams
compiledNFD$NFL_Factor= 100/(as.numeric(compiledNFD$Weight_per_serving_g))
#Store baby foods separately
baby_foods<-subset(compiledNFD, compiledNFD$Category_1=="Baby_Foods")
#Remove baby foods from the NFD
compiledNFD<-subset(compiledNFD, !compiledNFD$Category_1=="Baby_Foods")
#Translate daily values
setwd("~/GitHub/foodomics")
source("transDV.R")
#Put baby foods back into the main database
compiledNFD<-rbind(compiledNFD,baby_foods)
View(supplements)
